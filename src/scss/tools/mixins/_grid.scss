@mixin generate-grid($breakpoints) {
  $index: 1;

  @each $key, $breakpoint in $breakpoints {
    $gutter: map-get($breakpoint, gutter);
    $columns: map-get($breakpoint, columns);
    $columnSize: map-get($breakpoint, columnSize);
    $gridSize: calc-grid-size($breakpoint);

      @include generate-grid-container($gridSize);
    @if $index == 1 {
      @include generate-grid-columns($breakpoint, $key);
    } @else {
      @media screen and (min-width: $gridSize - 1px) {
        @include generate-grid-container($gridSize);
        @include generate-grid-columns($breakpoint, $key);
      }
    }
    $index: $index + 1;
  }
};

@mixin generate-grid-columns($breakpoint, $key) {
  $gutter: map-get($breakpoint, gutter);
  $gridSize: calc-grid-size($breakpoint);
  $gutterDiv: $gutter / 2;
  $columns: map-get($breakpoint, columns);
  $columnSize: map-get($breakpoint, columnSize);

  [class*='col-#{$key}'] {
    margin-left: percentage($gutterDiv / $gridSize);
    margin-right: percentage($gutterDiv / $gridSize);
  }

  [class*='col-'] {
    @include flex-shrink(0);
  }

  @for $i from 1 through $columns {
    $calcSize: (($columnSize + $gutter) * $i) - $gutter;
    $pushCalcSize: (($columnSize + $gutter) * $i) + $gutterDiv;

    .col-#{$key}-#{$i} {
      width: percentage($calcSize / $gridSize);
    }

    @if $i < $columns {
      .col-push-#{$i},
      .col-push-#{$key}-#{$i} {
        margin-left: $pushCalcSize + px;
      }
    }
  }
}

@mixin generate-grid-container($gridSize) {
  .container {
    @include flexbox;
    @include flex-direction(row);

    width: 100%;
    max-width: $gridSize + px;
    margin-left: auto;
    margin-right: auto;

    .no-flexbox & {
      @include clearfix;

      [class*='col-'] {
        float: left;
      }
    }
  }
};

@function calc-grid-size($breakpoint) {
  $columns: map-get($breakpoint, columns);
  $columnSize: map-get($breakpoint, columnSize);
  $gutter: map-get($breakpoint, gutter);

  @return ($gutter + $columnSize) * $columns;
};

